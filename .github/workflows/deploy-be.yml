name: "Backend deploy"

on:
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'
      - '.github/**'

permissions:
  contents: read
  id-token: write

jobs:
  deploy-be:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-be
        with:
          CICD_SA_GCP_JSON_KEY: ${{ secrets.CICD_SA_GCP_JSON_KEY }}
          APP: "backend"
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: 5432
          OAUTH2_AUTHORITY: ${{ secrets.OAUTH2_AUTHORITY }}
          OAUTH2_AUDIENCE: ${{ secrets.OAUTH2_AUDIENCE }}
          OAUTH2_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_ID }}
          HASHIDS_SALT: ${{ secrets.HASHIDS_SALT }}

  deploy-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-be
        with:
          CICD_SA_GCP_JSON_KEY: ${{ secrets.CICD_SA_GCP_JSON_KEY }}
          APP: "worker"
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: 5432
          OAUTH2_AUTHORITY: ${{ secrets.OAUTH2_AUTHORITY }}
          OAUTH2_AUDIENCE: ${{ secrets.OAUTH2_AUDIENCE }}
          OAUTH2_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_ID }}
          HASHIDS_SALT: ${{ secrets.HASHIDS_SALT }}

  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: sonar
        uses: ./.github/actions/sonar
        with:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          branch: main
